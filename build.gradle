plugins {
    id 'idea'
    id 'java'
    id 'groovy'
    id 'jacoco'
    id 'org.springframework.boot' version '3.2.6'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'neotech.homework'
version = '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

jar {
    enabled = false
}

bootJar {
    archivesBaseName = 'neotech-homework'
}

bootBuildImage {
    builder = 'paketobuildpacks/builder-jammy-tiny'
    imageName = 'neotech-homework'
    publish = false
}

ext {
    set('springCloudVersion', "2023.0.0")
    testContainersVersion = '1.19.6'
    spockVersion = '2.3-groovy-3.0'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-log4j2"

    implementation 'org.flywaydb:flyway-core'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'   // log4j2 yaml configuration support
    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
    
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.0.3'

    // Testing, Spock, Groovy
    testImplementation "org.codehaus.groovy:groovy-all:3.0.20"
    testImplementation "org.spockframework:spock-core:$spockVersion"
    testImplementation "org.spockframework:spock-spring:$spockVersion"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'

    testImplementation "org.testcontainers:spock:$testContainersVersion"
    implementation platform("org.testcontainers:testcontainers-bom:$testContainersVersion")
    testImplementation 'org.testcontainers:postgresql'
}

configurations {
    all*.exclude group:'org.springframework.boot', module:'spring-boot-starter-logging'
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs.add('-parameters')
    options.compilerArgs.add('-Amapstruct.defaultComponentModel=spring')
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/exception/**',
                    '**/controller/**',
                    '**/*MapperImpl.class'
            ])
        }))
    }
}

test {
    useJUnitPlatform()
    systemProperties System.properties
    classpath = sourceSets.test.runtimeClasspath

    testLogging {
        events "passed", "skipped", "failed"
    }
    finalizedBy jacocoTestReport
}

check.dependsOn jacocoTestCoverageVerification
